#%RAML 0.8
title: Swagger Petstore - OpenAPI 3.0
version: 1.0.26
documentation:
- title: Swagger Petstore - OpenAPI 3.0
  content: |
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about

    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!

    You can now help us improve the API whether it's by making changes to the definition itself or to the code.

    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.


    Some useful links:

    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)

    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
baseUri: https://petstore3.swagger.io/api/v3
securedBy: []
protocols:
- HTTPS
baseUriParameters: {}
schemas:
- Order: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Order",
      "title": "Order",
      "xml": {
        "name": "order",
        "attribute": false,
        "wrapped": false
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "title": "OrderStatus",
          "description": "Order Status",
          "example": "approved",
          "type": "string",
          "additionalProperties": false,
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean"
        }
      }
    }
- Category: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Category",
      "title": "Category",
      "xml": {
        "name": "category",
        "attribute": false,
        "wrapped": false
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    }
- User: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "User",
      "title": "User",
      "xml": {
        "name": "user",
        "attribute": false,
        "wrapped": false
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "description": "User Status",
          "type": "integer",
          "format": "int32"
        }
      }
    }
- Tag: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Tag",
      "title": "Tag",
      "xml": {
        "name": "tag",
        "attribute": false,
        "wrapped": false
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    }
- Pet: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Pet",
      "title": "Pet",
      "xml": {
        "name": "pet",
        "attribute": false,
        "wrapped": false
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "photoUrls": {
          "description": "",
          "xml": {
            "name": "photoUrls",
            "attribute": false,
            "wrapped": true
          },
          "type": "array",
          "items": {
            "xml": {
              "name": "photoUrl",
              "attribute": false,
              "wrapped": false
            },
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "id": "Category",
          "title": "Category",
          "xml": {
            "name": "category",
            "attribute": false,
            "wrapped": false
          },
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "tags": {
          "description": "",
          "xml": {
            "name": "tags",
            "attribute": false,
            "wrapped": true
          },
          "type": "array",
          "items": {
            "id": "Tag",
            "title": "Tag",
            "xml": {
              "name": "tag",
              "attribute": false,
              "wrapped": false
            },
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "status": {
          "title": "PetStatus",
          "description": "pet status in the store",
          "type": "string",
          "additionalProperties": false,
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "required": [
        "name",
        "photoUrls"
      ]
    }
- ApiResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ApiResponse",
      "title": "ApiResponse",
      "xml": {
        "name": "default",
        "attribute": false,
        "wrapped": false
      },
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
- PetStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "PetStatus",
      "description": "pet status in the store",
      "type": "string",
      "additionalProperties": false,
      "enum": [
        "available",
        "pending",
        "sold"
      ]
    }
- OrderStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "OrderStatus",
      "description": "Order Status",
      "example": "approved",
      "type": "string",
      "additionalProperties": false,
      "enum": [
        "placed",
        "approved",
        "delivered"
      ]
    }
securitySchemes:
- petstore_auth:
    type: OAuth 2.0
    settings:
      authorizationUri: https://petstore3.swagger.io/oauth/authorize
      accessTokenUri: ''
      authorizationGrants:
      - token
      scopes:
      - write:pets
      - read:pets
- api_key:
    type: x-custom
    describedBy:
      headers:
        api_key:
          type: string
          required: true
          displayName: api_key
/pet:
  /findByStatus:
    get:
      securedBy:
      - petstore_auth:
          scopes:
          - write:pets
          - read:pets
      description: Multiple status values can be provided with comma separated strings.
      queryParameters:
        status:
          description: Status values that need to be considered for filter
          required: false
          displayName: status
          enum:
          - available
          - pending
          - sold
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "description": "",
                  "type": "array",
                  "items": {
                    "id": "Pet",
                    "title": "Pet",
                    "xml": {
                      "name": "pet",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "photoUrls": {
                        "description": "",
                        "xml": {
                          "name": "photoUrls",
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "xml": {
                            "name": "photoUrl",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "category": {
                        "id": "Category",
                        "title": "Category",
                        "xml": {
                          "name": "category",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "tags": {
                        "description": "",
                        "xml": {
                          "name": "tags",
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "id": "Tag",
                          "title": "Tag",
                          "xml": {
                            "name": "tag",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "status": {
                        "title": "PetStatus",
                        "description": "pet status in the store",
                        "type": "string",
                        "additionalProperties": false,
                        "enum": [
                          "available",
                          "pending",
                          "sold"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "photoUrls"
                    ]
                  }
                }
            application/xml:
              schema: |
                {
                  "description": "",
                  "xml": {
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "array",
                  "items": {
                    "id": "Pet",
                    "title": "Pet",
                    "xml": {
                      "name": "pet",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "photoUrls": {
                        "description": "",
                        "xml": {
                          "name": "photoUrls",
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "xml": {
                            "name": "photoUrl",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "category": {
                        "id": "Category",
                        "title": "Category",
                        "xml": {
                          "name": "category",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "tags": {
                        "description": "",
                        "xml": {
                          "name": "tags",
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "id": "Tag",
                          "title": "Tag",
                          "xml": {
                            "name": "tag",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "status": {
                        "title": "PetStatus",
                        "description": "pet status in the store",
                        "type": "string",
                        "additionalProperties": false,
                        "enum": [
                          "available",
                          "pending",
                          "sold"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "photoUrls"
                    ]
                  }
                }
        '400':
          description: Invalid status value
        '0':
          description: Unexpected error
  /findByTags:
    get:
      securedBy:
      - petstore_auth:
          scopes:
          - write:pets
          - read:pets
      description: Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
      queryParameters:
        tags:
          description: Tags to filter by
          type: string
          required: false
          displayName: tags
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "description": "",
                  "type": "array",
                  "items": {
                    "id": "Pet",
                    "title": "Pet",
                    "xml": {
                      "name": "pet",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "photoUrls": {
                        "description": "",
                        "xml": {
                          "name": "photoUrls",
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "xml": {
                            "name": "photoUrl",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "category": {
                        "id": "Category",
                        "title": "Category",
                        "xml": {
                          "name": "category",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "tags": {
                        "description": "",
                        "xml": {
                          "name": "tags",
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "id": "Tag",
                          "title": "Tag",
                          "xml": {
                            "name": "tag",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "status": {
                        "title": "PetStatus",
                        "description": "pet status in the store",
                        "type": "string",
                        "additionalProperties": false,
                        "enum": [
                          "available",
                          "pending",
                          "sold"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "photoUrls"
                    ]
                  }
                }
            application/xml:
              schema: |
                {
                  "description": "",
                  "xml": {
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "array",
                  "items": {
                    "id": "Pet",
                    "title": "Pet",
                    "xml": {
                      "name": "pet",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "photoUrls": {
                        "description": "",
                        "xml": {
                          "name": "photoUrls",
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "xml": {
                            "name": "photoUrl",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "category": {
                        "id": "Category",
                        "title": "Category",
                        "xml": {
                          "name": "category",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "tags": {
                        "description": "",
                        "xml": {
                          "name": "tags",
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "id": "Tag",
                          "title": "Tag",
                          "xml": {
                            "name": "tag",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "status": {
                        "title": "PetStatus",
                        "description": "pet status in the store",
                        "type": "string",
                        "additionalProperties": false,
                        "enum": [
                          "available",
                          "pending",
                          "sold"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "photoUrls"
                    ]
                  }
                }
        '400':
          description: Invalid tag value
        '0':
          description: Unexpected error
  /{petId}:
    uriParameters:
      petId:
        description: ID of pet to return
        type: integer
        example: '10'
        required: true
        displayName: petId
    /uploadImage:
      uriParameters: {}
      post:
        securedBy:
        - petstore_auth:
            scopes:
            - write:pets
            - read:pets
        description: Upload image of the pet.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/octet-stream
        queryParameters:
          additionalMetadata:
            description: Additional Metadata
            type: string
            required: false
            displayName: additionalMetadata
        body:
          application/octet-stream:
            formParameters:
              body:
                type: file
                required: false
                displayName: body
        responses:
          '200':
            description: successful operation
            body:
              application/json:
                schema: |
                  {
                    "id": "ApiResponse",
                    "title": "ApiResponse",
                    "xml": {
                      "name": "default",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "type": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
          '400':
            description: No file uploaded
          '404':
            description: Pet not found
          '0':
            description: Unexpected error
    get:
      securedBy:
      - api_key
      - petstore_auth:
          scopes:
          - write:pets
          - read:pets
      description: Returns a single pet.
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "id": "Pet",
                  "title": "Pet",
                  "xml": {
                    "name": "pet",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "photoUrls": {
                      "description": "",
                      "xml": {
                        "name": "photoUrls",
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "xml": {
                          "name": "photoUrl",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "category": {
                      "id": "Category",
                      "title": "Category",
                      "xml": {
                        "name": "category",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "tags": {
                      "description": "",
                      "xml": {
                        "name": "tags",
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "id": "Tag",
                        "title": "Tag",
                        "xml": {
                          "name": "tag",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "title": "PetStatus",
                      "description": "pet status in the store",
                      "type": "string",
                      "additionalProperties": false,
                      "enum": [
                        "available",
                        "pending",
                        "sold"
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "photoUrls"
                  ]
                }
            application/xml:
              schema: |
                {
                  "id": "Pet",
                  "title": "Pet",
                  "xml": {
                    "name": "pet",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "photoUrls": {
                      "description": "",
                      "xml": {
                        "name": "photoUrls",
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "xml": {
                          "name": "photoUrl",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "category": {
                      "id": "Category",
                      "title": "Category",
                      "xml": {
                        "name": "category",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "tags": {
                      "description": "",
                      "xml": {
                        "name": "tags",
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "id": "Tag",
                        "title": "Tag",
                        "xml": {
                          "name": "tag",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "title": "PetStatus",
                      "description": "pet status in the store",
                      "type": "string",
                      "additionalProperties": false,
                      "enum": [
                        "available",
                        "pending",
                        "sold"
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "photoUrls"
                  ]
                }
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '0':
          description: Unexpected error
    post:
      securedBy:
      - petstore_auth:
          scopes:
          - write:pets
          - read:pets
      description: Updates a pet resource based on the form data.
      queryParameters:
        name:
          description: Name of pet that needs to be updated
          type: string
          required: false
          displayName: name
        status:
          description: Status of pet that needs to be updated
          type: string
          required: false
          displayName: status
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "id": "Pet",
                  "title": "Pet",
                  "xml": {
                    "name": "pet",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "photoUrls": {
                      "description": "",
                      "xml": {
                        "name": "photoUrls",
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "xml": {
                          "name": "photoUrl",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "category": {
                      "id": "Category",
                      "title": "Category",
                      "xml": {
                        "name": "category",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "tags": {
                      "description": "",
                      "xml": {
                        "name": "tags",
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "id": "Tag",
                        "title": "Tag",
                        "xml": {
                          "name": "tag",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "title": "PetStatus",
                      "description": "pet status in the store",
                      "type": "string",
                      "additionalProperties": false,
                      "enum": [
                        "available",
                        "pending",
                        "sold"
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "photoUrls"
                  ]
                }
            application/xml:
              schema: |
                {
                  "id": "Pet",
                  "title": "Pet",
                  "xml": {
                    "name": "pet",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "photoUrls": {
                      "description": "",
                      "xml": {
                        "name": "photoUrls",
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "xml": {
                          "name": "photoUrl",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "category": {
                      "id": "Category",
                      "title": "Category",
                      "xml": {
                        "name": "category",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "tags": {
                      "description": "",
                      "xml": {
                        "name": "tags",
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "id": "Tag",
                        "title": "Tag",
                        "xml": {
                          "name": "tag",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "title": "PetStatus",
                      "description": "pet status in the store",
                      "type": "string",
                      "additionalProperties": false,
                      "enum": [
                        "available",
                        "pending",
                        "sold"
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "photoUrls"
                  ]
                }
        '400':
          description: Invalid input
        '0':
          description: Unexpected error
    delete:
      securedBy:
      - petstore_auth:
          scopes:
          - write:pets
          - read:pets
      description: Delete a pet.
      headers:
        api_key:
          type: string
          required: false
          displayName: api_key
      responses:
        '200':
          description: Pet deleted
        '400':
          description: Invalid pet value
        '0':
          description: Unexpected error
  put:
    securedBy:
    - petstore_auth:
        scopes:
        - write:pets
        - read:pets
    description: Update an existing pet by Id.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/x-www-form-urlencoded
    body:
      application/x-www-form-urlencoded:
        formParameters:
          name:
            type: string
            example: doggie
            required: true
            displayName: name
          photoUrls:
            type: string
            required: true
            displayName: photoUrls
          id:
            type: integer
            example: '10'
            required: false
            displayName: id
          category:
            type: string
            required: false
            displayName: category
          tags:
            type: string
            required: false
            displayName: tags
          status:
            description: pet status in the store
            required: false
            displayName: status
            enum:
            - available
            - pending
            - sold
    responses:
      '200':
        description: Successful operation
        body:
          application/json:
            schema: |
              {
                "id": "Pet",
                "title": "Pet",
                "xml": {
                  "name": "pet",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "photoUrls": {
                    "description": "",
                    "xml": {
                      "name": "photoUrls",
                      "attribute": false,
                      "wrapped": true
                    },
                    "type": "array",
                    "items": {
                      "xml": {
                        "name": "photoUrl",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "string"
                    }
                  },
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "category": {
                    "id": "Category",
                    "title": "Category",
                    "xml": {
                      "name": "category",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "tags": {
                    "description": "",
                    "xml": {
                      "name": "tags",
                      "attribute": false,
                      "wrapped": true
                    },
                    "type": "array",
                    "items": {
                      "id": "Tag",
                      "title": "Tag",
                      "xml": {
                        "name": "tag",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "status": {
                    "title": "PetStatus",
                    "description": "pet status in the store",
                    "type": "string",
                    "additionalProperties": false,
                    "enum": [
                      "available",
                      "pending",
                      "sold"
                    ]
                  }
                },
                "required": [
                  "name",
                  "photoUrls"
                ]
              }
          application/xml:
            schema: |
              {
                "id": "Pet",
                "title": "Pet",
                "xml": {
                  "name": "pet",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "photoUrls": {
                    "description": "",
                    "xml": {
                      "name": "photoUrls",
                      "attribute": false,
                      "wrapped": true
                    },
                    "type": "array",
                    "items": {
                      "xml": {
                        "name": "photoUrl",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "string"
                    }
                  },
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "category": {
                    "id": "Category",
                    "title": "Category",
                    "xml": {
                      "name": "category",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "tags": {
                    "description": "",
                    "xml": {
                      "name": "tags",
                      "attribute": false,
                      "wrapped": true
                    },
                    "type": "array",
                    "items": {
                      "id": "Tag",
                      "title": "Tag",
                      "xml": {
                        "name": "tag",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "status": {
                    "title": "PetStatus",
                    "description": "pet status in the store",
                    "type": "string",
                    "additionalProperties": false,
                    "enum": [
                      "available",
                      "pending",
                      "sold"
                    ]
                  }
                },
                "required": [
                  "name",
                  "photoUrls"
                ]
              }
      '400':
        description: Invalid ID supplied
      '404':
        description: Pet not found
      '422':
        description: Validation exception
      '0':
        description: Unexpected error
  post:
    securedBy:
    - petstore_auth:
        scopes:
        - write:pets
        - read:pets
    description: Add a new pet to the store.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/x-www-form-urlencoded
    body:
      application/x-www-form-urlencoded:
        formParameters:
          name:
            type: string
            example: doggie
            required: true
            displayName: name
          photoUrls:
            type: string
            required: true
            displayName: photoUrls
          id:
            type: integer
            example: '10'
            required: false
            displayName: id
          category:
            type: string
            required: false
            displayName: category
          tags:
            type: string
            required: false
            displayName: tags
          status:
            description: pet status in the store
            required: false
            displayName: status
            enum:
            - available
            - pending
            - sold
    responses:
      '200':
        description: Successful operation
        body:
          application/json:
            schema: |
              {
                "id": "Pet",
                "title": "Pet",
                "xml": {
                  "name": "pet",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "photoUrls": {
                    "description": "",
                    "xml": {
                      "name": "photoUrls",
                      "attribute": false,
                      "wrapped": true
                    },
                    "type": "array",
                    "items": {
                      "xml": {
                        "name": "photoUrl",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "string"
                    }
                  },
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "category": {
                    "id": "Category",
                    "title": "Category",
                    "xml": {
                      "name": "category",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "tags": {
                    "description": "",
                    "xml": {
                      "name": "tags",
                      "attribute": false,
                      "wrapped": true
                    },
                    "type": "array",
                    "items": {
                      "id": "Tag",
                      "title": "Tag",
                      "xml": {
                        "name": "tag",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "status": {
                    "title": "PetStatus",
                    "description": "pet status in the store",
                    "type": "string",
                    "additionalProperties": false,
                    "enum": [
                      "available",
                      "pending",
                      "sold"
                    ]
                  }
                },
                "required": [
                  "name",
                  "photoUrls"
                ]
              }
          application/xml:
            schema: |
              {
                "id": "Pet",
                "title": "Pet",
                "xml": {
                  "name": "pet",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "photoUrls": {
                    "description": "",
                    "xml": {
                      "name": "photoUrls",
                      "attribute": false,
                      "wrapped": true
                    },
                    "type": "array",
                    "items": {
                      "xml": {
                        "name": "photoUrl",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "string"
                    }
                  },
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "category": {
                    "id": "Category",
                    "title": "Category",
                    "xml": {
                      "name": "category",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "tags": {
                    "description": "",
                    "xml": {
                      "name": "tags",
                      "attribute": false,
                      "wrapped": true
                    },
                    "type": "array",
                    "items": {
                      "id": "Tag",
                      "title": "Tag",
                      "xml": {
                        "name": "tag",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "status": {
                    "title": "PetStatus",
                    "description": "pet status in the store",
                    "type": "string",
                    "additionalProperties": false,
                    "enum": [
                      "available",
                      "pending",
                      "sold"
                    ]
                  }
                },
                "required": [
                  "name",
                  "photoUrls"
                ]
              }
      '400':
        description: Invalid input
      '422':
        description: Validation exception
      '0':
        description: Unexpected error
/user:
  /createWithList:
    post:
      description: Creates list of users with given input array.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "description": "",
              "type": "array",
              "items": {
                "id": "User",
                "title": "User",
                "xml": {
                  "name": "user",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "userStatus": {
                    "description": "User Status",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          example: ''
      responses:
        '200':
          description: Successful operation
          body:
            application/json:
              schema: |
                {
                  "id": "User",
                  "title": "User",
                  "xml": {
                    "name": "user",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "username": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "userStatus": {
                      "description": "User Status",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
            application/xml:
              schema: |
                {
                  "id": "User",
                  "title": "User",
                  "xml": {
                    "name": "user",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "username": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "userStatus": {
                      "description": "User Status",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
        '0':
          description: Unexpected error
  /login:
    get:
      description: Log into the system.
      queryParameters:
        username:
          description: The user name for login
          type: string
          required: false
          displayName: username
        password:
          description: The password for login in clear text
          type: string
          required: false
          displayName: password
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              required: false
            X-Expires-After:
              required: false
          body:
            application/xml:
              schema: |
                {
                  "xml": {
                    "name": "response200",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "string"
                }
            application/json:
              schema: |
                {
                  "type": "string"
                }
        '400':
          description: Invalid username/password supplied
        '0':
          description: Unexpected error
  /logout:
    get:
      description: Log user out of the system.
      responses:
        '200':
          description: successful operation
        '0':
          description: Unexpected error
  /{usersname}:
    uriParameters:
      usersname:
        description: The username that needs to be processed
        type: string
        required: true
        displayName: usersname
    get:
      description: Get user detail based on username.
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "id": "User",
                  "title": "User",
                  "xml": {
                    "name": "user",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "username": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "userStatus": {
                      "description": "User Status",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
            application/xml:
              schema: |
                {
                  "id": "User",
                  "title": "User",
                  "xml": {
                    "name": "user",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "username": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "userStatus": {
                      "description": "User Status",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        '0':
          description: Unexpected error
    put:
      description: This can only be done by the logged in user.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/x-www-form-urlencoded
      body:
        application/x-www-form-urlencoded:
          formParameters:
            id:
              type: integer
              example: '10'
              required: false
              displayName: id
            username:
              type: string
              example: theUser
              required: false
              displayName: username
            firstName:
              type: string
              example: John
              required: false
              displayName: firstName
            lastName:
              type: string
              example: James
              required: false
              displayName: lastName
            email:
              type: string
              example: john@email.com
              required: false
              displayName: email
            password:
              type: string
              example: '12345'
              required: false
              displayName: password
            phone:
              type: string
              example: '12345'
              required: false
              displayName: phone
            userStatus:
              description: User Status
              type: integer
              example: '1'
              required: false
              displayName: userStatus
      responses:
        '200':
          description: successful operation
        '400':
          description: bad request
        '404':
          description: user not found
        '0':
          description: Unexpected error
    delete:
      description: This can only be done by the logged in user.
      responses:
        '200':
          description: User deleted
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        '0':
          description: Unexpected error
  post:
    description: This can only be done by the logged in user.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/x-www-form-urlencoded
    body:
      application/x-www-form-urlencoded:
        formParameters:
          id:
            type: integer
            example: '10'
            required: false
            displayName: id
          username:
            type: string
            example: theUser
            required: false
            displayName: username
          firstName:
            type: string
            example: John
            required: false
            displayName: firstName
          lastName:
            type: string
            example: James
            required: false
            displayName: lastName
          email:
            type: string
            example: john@email.com
            required: false
            displayName: email
          password:
            type: string
            example: '12345'
            required: false
            displayName: password
          phone:
            type: string
            example: '12345'
            required: false
            displayName: phone
          userStatus:
            description: User Status
            type: integer
            example: '1'
            required: false
            displayName: userStatus
    responses:
      '200':
        description: successful operation
        body:
          application/json:
            schema: |
              {
                "id": "User",
                "title": "User",
                "xml": {
                  "name": "user",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "userStatus": {
                    "description": "User Status",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
          application/xml:
            schema: |
              {
                "id": "User",
                "title": "User",
                "xml": {
                  "name": "user",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "userStatus": {
                    "description": "User Status",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
      '0':
        description: Unexpected error
/store:
  /inventory:
    get:
      securedBy:
      - api_key
      description: Returns a map of status codes to quantities.
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
        '0':
          description: Unexpected error
  /order:
    /{orderId}:
      uriParameters:
        orderId:
          description: ID of order that needs to be fetched
          type: integer
          required: true
          displayName: orderId
      get:
        description: For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.
        responses:
          '200':
            description: successful operation
            body:
              application/json:
                schema: |
                  {
                    "id": "Order",
                    "title": "Order",
                    "xml": {
                      "name": "order",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "petId": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "quantity": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "shipDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "status": {
                        "title": "OrderStatus",
                        "description": "Order Status",
                        "example": "approved",
                        "type": "string",
                        "additionalProperties": false,
                        "enum": [
                          "placed",
                          "approved",
                          "delivered"
                        ]
                      },
                      "complete": {
                        "type": "boolean"
                      }
                    }
                  }
              application/xml:
                schema: |
                  {
                    "id": "Order",
                    "title": "Order",
                    "xml": {
                      "name": "order",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "petId": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "quantity": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "shipDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "status": {
                        "title": "OrderStatus",
                        "description": "Order Status",
                        "example": "approved",
                        "type": "string",
                        "additionalProperties": false,
                        "enum": [
                          "placed",
                          "approved",
                          "delivered"
                        ]
                      },
                      "complete": {
                        "type": "boolean"
                      }
                    }
                  }
          '400':
            description: Invalid ID supplied
          '404':
            description: Order not found
          '0':
            description: Unexpected error
      delete:
        description: For valid response try integer IDs with value < 1000. Anything above 1000 or non-integers will generate API errors.
        responses:
          '200':
            description: order deleted
          '400':
            description: Invalid ID supplied
          '404':
            description: Order not found
          '0':
            description: Unexpected error
    post:
      description: Place a new order in the store.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/x-www-form-urlencoded
      body:
        application/x-www-form-urlencoded:
          formParameters:
            id:
              type: integer
              example: '10'
              required: false
              displayName: id
            petId:
              type: integer
              example: '198772'
              required: false
              displayName: petId
            quantity:
              type: integer
              example: '7'
              required: false
              displayName: quantity
            shipDate:
              type: date
              required: false
              displayName: shipDate
            status:
              description: Order Status
              required: false
              displayName: status
              enum:
              - placed
              - approved
              - delivered
            complete:
              type: boolean
              required: false
              displayName: complete
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "id": "Order",
                  "title": "Order",
                  "xml": {
                    "name": "order",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "petId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "quantity": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "shipDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "title": "OrderStatus",
                      "description": "Order Status",
                      "example": "approved",
                      "type": "string",
                      "additionalProperties": false,
                      "enum": [
                        "placed",
                        "approved",
                        "delivered"
                      ]
                    },
                    "complete": {
                      "type": "boolean"
                    }
                  }
                }
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        '0':
          description: Unexpected error
